/*
========================================================================================
    c-sar Nextflow config file
========================================================================================
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

params {
    // Pipeline
    name = false
    help = false
    validate_params = true
    show_hidden_params = false

    // Results directories
    outdir = "."
    resultDir = "${params.outdir}/results"
    reportDir = "${params.outdir}/results/reports"

    // Mandatory input options
    counts = false
    count_type = "single"
    library = false
    info = false

    // Stage muting
    no_qc = false
    no_duplicate_removal = false
    no_filter = false
    no_normalisation = false
    no_correction = false
    no_analysis = false

    // Normalisation defaults
    normalisation_method = 'mageck_median'
    normalisation_control_group = 'plasmid'

    // Essential genes
    essential_genes = null
    ess = params.essential_genes
    ess_gene_column_index = 1
    no_ess_header = true
    ess_delim = "\t"

    // Non-essential genes
    nonessential_genes = null
    noness = params.nonessential_genes
    noness_gene_column_index = 1
    no_noness_header = true
    noness_delim = "\t"
}

//Include module configs
includeConfig 'modules/crispr_utils/config/common'
includeConfig 'modules/crispr_qc/config/common'
includeConfig 'modules/CRISPRcleanR/config/common'
includeConfig 'modules/MAGeCK/config/common'
includeConfig 'modules/BAGEL2/config/common'

manifest {
  name = 'C-SAR: CRISPR single guide analysis reporting'
  description = 'Nextflow pipeline for single guide CRISPR analyses'
  author = 'Victoria Offord'
  homePage = 'https://github.com/cancerit/C-SAR'
  version = '1.3.3'
  mainScript = 'main.nf'
  nextflowVersion = '!>=20.10.0'
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
trace {
  enabled = true
  file = "${params.reportDir}/execution_trace_${trace_timestamp}.txt"
}
// To allow DAG, Graphviz must be installed
/*
dag {
    enabled = true
    file    = "${params.reportDir}/pipeline_dag_${trace_timestamp}.svg"
}
*/
timeline {
  enabled = true
  file = "${params.reportDir}/execution_timeline_${trace_timestamp}.html"
}
report {
  enabled = true
  file = "${params.reportDir}/execution_report_${trace_timestamp}.html"
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// Based on config from nf-core
env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
}

profiles {
    conda {
        params.enable_conda    = true
        docker.enabled         = false
        singularity.enabled    = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
    }
}
